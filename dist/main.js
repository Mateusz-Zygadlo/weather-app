(()=>{"use strict";let e,t="C";!async function(){const t=await fetch("https://api.openweathermap.org/data/2.5/weather?q=wroclaw&appid=9ef11235afd6c1b84dcabb6223277f68",{mode:"cors"});e=await t.json(),(e=>{const t=document.querySelector(".root");t.textContent="";const n=document.createElement("nav"),d=document.createElement("h1");d.textContent="Weather app",n.appendChild(d),t.appendChild(n);const a=document.createElement("main"),c=document.createElement("div");c.classList.add("search");const s=document.createElement("form"),i=document.createElement("input");i.type="text",s.appendChild(i);const o=document.createElement("button");o.type="submit",o.textContent="search",s.appendChild(o),c.appendChild(s),a.appendChild(c);const m=document.createElement("div");m.classList.add("card");const l=document.createElement("div");l.classList.add("name"),l.textContent=e.name,m.appendChild(l);const p=document.createElement("div");p.classList.add("weather");const r=document.createElement("div");r.classList.add("temperature"),r.textContent=e.main.temp,p.appendChild(r);const h=document.createElement("div");h.classList.add("clouds");const u=document.createElement("img");u.src=`https://openweathermap.org/img/wn/${e.weather[0].icon}.png`,u.alt=e.weather.main,h.appendChild(u),p.appendChild(h),m.appendChild(p);const C=document.createElement("div");C.classList.add("fells"),C.textContent=`Fells like: ${e.main.feels_like}`,m.appendChild(C);const E=document.createElement("div");E.classList.add("humidity"),E.textContent=`Humidity: ${e.main.humidity}%`,m.appendChild(E);const x=document.createElement("div");x.classList.add("Pressure"),x.textContent=`Pressure: ${e.main.pressure}hPa`,m.appendChild(x);const L=document.createElement("div");L.classList.add("maxAndMin");const v=document.createElement("div");v.classList.add("minTemp"),v.textContent=`minTemp: ${e.main.temp_min}`,L.appendChild(v);const f=document.createElement("div");f.classList.add("maxTemp"),f.textContent=`maxTemp: ${e.main.temp_max}`,L.appendChild(f),m.appendChild(L),a.appendChild(m),t.appendChild(a);const w=document.createElement("footer");w.classList.add("footer");const g=document.createElement("h1");g.classList.add("footer"),g.textContent="change C to F",w.appendChild(g),t.appendChild(w)})(e)}(),document.addEventListener("click",(e=>{if(e.target.classList.contains("footer"))return"C"==t?t="F":"F"==t&&(t="C"),void console.log(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,