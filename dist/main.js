(()=>{"use strict";const e=e=>e-273,t=e=>9*e/5-459.67;let n,a,d,c;const i=(i,s)=>{"C"==s?(n=e(i.main.temp).toFixed(2),a=e(i.main.feels_like).toFixed(2),d=e(i.main.temp_min).toFixed(2),c=e(i.main.temp_max).toFixed(2)):"F"==s&&(n=t(i.main.temp).toFixed(2),a=t(i.main.feels_like).toFixed(2),d=t(i.main.temp_min).toFixed(2),c=t(i.main.temp_max).toFixed(2));const o=document.querySelector(".root");o.textContent="";const m=document.createElement("nav"),l=document.createElement("h1");l.textContent="Weather app",m.appendChild(l),o.appendChild(m);const p=document.createElement("main"),r=document.createElement("div");r.classList.add("search");const u=document.createElement("form"),h=document.createElement("input");h.type="text",h.classList.add("input"),u.appendChild(h);const C=document.createElement("button");C.type="submit",C.classList.add("button"),C.textContent="search",u.appendChild(C),r.appendChild(u),p.appendChild(r);const x=document.createElement("div");x.classList.add("card");const E=document.createElement("div");E.classList.add("name"),E.textContent=i.name,x.appendChild(E);const L=document.createElement("div");L.classList.add("weather");const v=document.createElement("div");v.classList.add("temperature"),v.textContent=`${n}^${s}`,L.appendChild(v);const f=document.createElement("div");f.classList.add("clouds");const F=document.createElement("img");F.src=`https://openweathermap.org/img/wn/${i.weather[0].icon}.png`,F.alt=i.weather.main,f.appendChild(F),L.appendChild(f),x.appendChild(L);const y=document.createElement("div");y.classList.add("fells"),y.textContent=`Fells like: ${a}`,x.appendChild(y);const w=document.createElement("div");w.classList.add("humidity"),w.textContent=`Humidity: ${i.main.humidity}%`,x.appendChild(w);const g=document.createElement("div");g.classList.add("Pressure"),g.textContent=`Pressure: ${i.main.pressure}hPa`,x.appendChild(g);const $=document.createElement("div");$.classList.add("maxAndMin");const b=document.createElement("div");b.classList.add("minTemp"),b.textContent=`minTemp: ${d}`,$.appendChild(b);const _=document.createElement("div");_.classList.add("maxTemp"),_.textContent=`maxTemp: ${c}`,$.appendChild(_),x.appendChild($),p.appendChild(x),o.appendChild(p);const k=document.createElement("footer");k.classList.add("footer");const T=document.createElement("h1");T.classList.add("footer"),T.textContent="change C or F",k.appendChild(T),o.appendChild(k)};let s,o="C";async function m(e){try{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=9ef11235afd6c1b84dcabb6223277f68`,{mode:"cors"});return s=await t.json(),i(s,"C"),s}catch(e){return void alert("this city was not found try again")}}m("boston"),document.addEventListener("click",(e=>{e.target.classList.contains("footer")&&("C"==o?(o="F",i(s,o)):"F"==o&&(o="C",i(s,o)))})),document.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector(".input");e.target.classList.contains("button")&&t.value&&(m(t.value),i(s,o))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,